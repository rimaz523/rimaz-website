{
    "pipes": [],
    "interfaces": [
        {
            "name": "ErrorModel",
            "id": "interface-ErrorModel-a6fd69555ea1c8e31538d87d2fac3ab25ef1f8d683440b57b299aac01ecb39da62e03ec359429b832ed3eb4f9479836062ab9d788ce037d0c2d63688abe541b7",
            "file": "src/app/models/error.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ErrorModel {\n  message?: string\n  statusCode: number | undefined\n}\n",
            "properties": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "statusCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IArticle",
            "id": "interface-IArticle-7ce6435af1a20113e9e00a6ade47a1fa900ac5f049aa4d17a83a004e8f41f33ef26586cffe1695193ea61120d27bebf3a0c7d631024966051e9cb070a8d5fa31",
            "file": "src/app/models/article.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IArticle {\n  id: string\n  slug: string\n  title: string\n  content: string\n  url: string\n  image: string\n  publishedDate: string\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "publishedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISocialHandle",
            "id": "interface-ISocialHandle-f092a6ebdc40828ee053e0fc6a6aa96a8b249e031f4c9d069d14a4267f7df824e2ad469308e7b7f9957cbfbd45707e713e6c782edbf05a4ec9d6d4a3c4d4cbc2",
            "file": "src/app/models/social-handle.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISocialHandle {\n  name: string\n  url: string\n  displayOrder: number\n}\n",
            "properties": [
                {
                    "name": "displayOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Result",
            "id": "interface-Result-ffea3d82968db8befcd36f1ce5050347b022233bafed04da02bf29a8ead87b76e55a0fea1057798b263e1b1cdf6dea693bc3e4c3e971a3f8036a72555c9f884c",
            "file": "src/app/models/result.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ErrorModel } from './error.model'\n\nexport interface Result<T> {\n  data: T | undefined\n  error?: ErrorModel\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErrorModel",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ArticlePreviewService",
            "id": "injectable-ArticlePreviewService-8f81e0be4e2b5a8986b16ecf3d165fa592352d8338e42dbaf167f42a584091c32c95ac489c471498b3ac4b91a88f5ce52eeb0d64aae4a5c20e8dca8aab9d3d8d",
            "file": "src/app/components/article-preview-list/article-preview.service.ts",
            "properties": [
                {
                    "name": "articlePreviewList$",
                    "defaultValue": "this.http\n    .get<IArticle[]>(`${environment.integrationsApimUrl}${ApiRoutes.articlePreviews}?limit=4`)\n    .pipe(\n      map(data => ({ data: data, error: undefined }) as Result<IArticle[]>),\n      shareReplay(1),\n      catchError(error =>\n        of({\n          data: [],\n          error: this.errorService.getErrorModel(error),\n        } as Result<IArticle[]>),\n      ),\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "articlePreviews",
                    "defaultValue": "computed(() => this.articlePreviewsResult().data)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "articlePreviewsError",
                    "defaultValue": "computed(() => this.articlePreviewsResult().error)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "articlePreviewsResult",
                    "defaultValue": "toSignal(this.articlePreviewList$, {\n    initialValue: { data: [] } as Result<IArticle[]>,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "errorService",
                    "defaultValue": "inject(ErrorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\nimport { computed, inject, Injectable } from '@angular/core'\nimport { toSignal } from '@angular/core/rxjs-interop'\nimport { catchError, map, of, shareReplay } from 'rxjs'\nimport { Result } from '@models/result.model'\nimport { ErrorService } from '@core/services/error.service'\nimport { environment } from 'environments/environment'\nimport { IArticle } from '@models/article.model'\nimport { ApiRoutes } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArticlePreviewService {\n  private http = inject(HttpClient)\n  private errorService = inject(ErrorService)\n\n  private readonly articlePreviewList$ = this.http\n    .get<IArticle[]>(`${environment.integrationsApimUrl}${ApiRoutes.articlePreviews}?limit=4`)\n    .pipe(\n      map(data => ({ data: data, error: undefined }) as Result<IArticle[]>),\n      shareReplay(1),\n      catchError(error =>\n        of({\n          data: [],\n          error: this.errorService.getErrorModel(error),\n        } as Result<IArticle[]>),\n      ),\n    )\n\n  private articlePreviewsResult = toSignal(this.articlePreviewList$, {\n    initialValue: { data: [] } as Result<IArticle[]>,\n  })\n\n  articlePreviews = computed(() => this.articlePreviewsResult().data)\n  articlePreviewsError = computed(() => this.articlePreviewsResult().error)\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ErrorService",
            "id": "injectable-ErrorService-25434388465a73c4eb4e719770bbc6b5bbe8abe985ec3c295a5e285a2b030f35b3bd8f42d822bc6173dfb13ef38188901aaee5ca979dd7de463fcc41ee1ac88a",
            "file": "src/app/core/services/error.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getErrorModel",
                    "args": [
                        {
                            "name": "genericError",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ErrorModel",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "genericError",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ErrorModel } from '@models/error.model'\nimport { ErrorMessages } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n  getErrorModel(genericError: unknown): ErrorModel {\n    const error: ErrorModel = {\n      message: ErrorMessages.Unknown_Error,\n      statusCode: undefined,\n    }\n\n    if (genericError instanceof HttpErrorResponse) {\n      error.message = genericError.error.message\n      error.statusCode = genericError.error.statusCode\n    } else if (genericError instanceof Error) {\n      error.message = genericError.message\n    }\n    return error\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "IconService",
            "id": "injectable-IconService-f9b663b8116f16cfa195b34cbda5783e02c3ab7911a2c74c42bf24d1e198820d324b600f7236ae704844871220d61437c56212dd33c0b17aba9f41b78d5351cf",
            "file": "src/app/core/services/icon.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { IconNames, IconResourceUrls } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconService {\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n  ) {}\n\n  init() {\n    this.matIconRegistry.addSvgIcon(\n      IconNames.Medium,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.Medium),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.StackOverflow,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.StackOverflow),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.TwitterX,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.TwitterX),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.Linkedin,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.Linkedin),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.Github,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.Github),\n    )\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matIconRegistry",
                        "type": "MatIconRegistry",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "domSanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "matIconRegistry",
                        "type": "MatIconRegistry",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "domSanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SocialHandlesService",
            "id": "injectable-SocialHandlesService-26bc6bfb3d4505dc29e113892101ddd6d5b1c555ffb9ce4941f4c057178b858f04ca1b7608cc1c50224a9406e21113d87424bf801b6a71418a4fea9b4f79f01c",
            "file": "src/app/components/social-handles-band/social-handles.service.ts",
            "properties": [
                {
                    "name": "errorService",
                    "defaultValue": "inject(ErrorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "socialHandles",
                    "defaultValue": "computed(() => this.socialHandlesResult().data)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "socialHandles$",
                    "defaultValue": "this.http\n    .get<ISocialHandle[]>(`${environment.integrationsApimUrl}${ApiRoutes.socialHandles}`)\n    .pipe(\n      map(data => ({ data: data, error: undefined }) as Result<ISocialHandle[]>),\n      shareReplay(1),\n      catchError(error =>\n        of({\n          data: [],\n          error: this.errorService.getErrorModel(error),\n        } as Result<ISocialHandle[]>),\n      ),\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "socialHandlesError",
                    "defaultValue": "computed(() => this.socialHandlesResult().error)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "socialHandlesResult",
                    "defaultValue": "toSignal(this.socialHandles$, {\n    initialValue: { data: [] } as Result<ISocialHandle[]>,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\nimport { computed, inject, Injectable } from '@angular/core'\nimport { ISocialHandle } from '@models/social-handle.model'\nimport { toSignal } from '@angular/core/rxjs-interop'\nimport { catchError, map, of, shareReplay } from 'rxjs'\nimport { Result } from '@models/result.model'\nimport { ErrorService } from '@core/services/error.service'\nimport { environment } from 'environments/environment'\nimport { ApiRoutes } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocialHandlesService {\n  private http = inject(HttpClient)\n  private errorService = inject(ErrorService)\n\n  private readonly socialHandles$ = this.http\n    .get<ISocialHandle[]>(`${environment.integrationsApimUrl}${ApiRoutes.socialHandles}`)\n    .pipe(\n      map(data => ({ data: data, error: undefined }) as Result<ISocialHandle[]>),\n      shareReplay(1),\n      catchError(error =>\n        of({\n          data: [],\n          error: this.errorService.getErrorModel(error),\n        } as Result<ISocialHandle[]>),\n      ),\n    )\n\n  private socialHandlesResult = toSignal(this.socialHandles$, {\n    initialValue: { data: [] } as Result<ISocialHandle[]>,\n  })\n\n  socialHandles = computed(() => this.socialHandlesResult().data)\n  socialHandlesError = computed(() => this.socialHandlesResult().error)\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-f5e93f7f3cab86f6e14c9fda1df87f0fce414465b74349475e2a57f56b2618471e9c7263c7991be14e3c768ed139adc92326fa15227704ddbabf8030c37fbb95",
            "file": "src/app/core/services/theme.services.ts",
            "properties": [
                {
                    "name": "isDark",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [
                {
                    "name": "getIsDark",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLightMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core'\nimport { appTheme, darkMode } from '@shared/constants/app.constants'\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  isDark = signal(false)\n\n  constructor() {\n    this.loadTheme()\n  }\n\n  loadTheme(): void {\n    const theme = localStorage.getItem(appTheme)\n    if (theme === darkMode) {\n      document.documentElement.classList.add(darkMode)\n      this.isDark.set(true)\n    } else {\n      document.documentElement.classList.remove(darkMode)\n    }\n  }\n\n  setDarkMode(): boolean {\n    this.isDark.set(true)\n    document.documentElement.classList.add(darkMode)\n    localStorage.setItem(appTheme, darkMode)\n    return this.isDark()\n  }\n\n  setLightMode(): boolean {\n    this.isDark.set(false)\n    document.documentElement.classList.remove(darkMode)\n    localStorage.removeItem(appTheme)\n    return this.isDark()\n  }\n\n  getIsDark(): boolean {\n    return this.isDark()\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0348cfb31f3e879734eec5c22a36b1345ef0dbda177c95ae450225c5e01209239d28dea16155b82eb6a6128c2e94faea688fd6e00a4837950021d431e96fb5e2",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'website-angular-spa'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { HeaderComponent } from '@core/components/header/header.component'\nimport { ThemeService } from '@core/services/theme.services'\nimport { FooterComponent } from '@core/components/footer/footer.component'\n\n@Component({\n  selector: 'rmz-root',\n  imports: [RouterOutlet, HeaderComponent, FooterComponent],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'website-angular-spa'\n\n  constructor(private themeService: ThemeService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<rmz-header></rmz-header>\n<router-outlet />\n<rmz-footer></rmz-footer>\n"
        },
        {
            "name": "ArticlePreviewComponent",
            "id": "component-ArticlePreviewComponent-522e49161130668231a640741b851a08f54bfda0e4bf8f3d4146d22f5b276a720b5789833d3674f38677dd23ac2396d2d686846cff6b8a7b1ebd00333e68221f",
            "file": "src/app/components/article-preview/article-preview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-article-preview",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./article-preview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IArticle",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cdnUrl",
                    "defaultValue": "environment.cdnUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "openLinkInNewTab",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCardModule } from '@angular/material/card'\nimport { IArticle } from '@models/article.model'\nimport { environment } from 'environments/environment'\n\n@Component({\n  selector: 'rmz-article-preview',\n  imports: [MatCardModule, MatButtonModule],\n  templateUrl: './article-preview.component.html',\n  styleUrl: './article-preview.component.scss',\n})\nexport class ArticlePreviewComponent {\n  @Input() article!: IArticle\n\n  public cdnUrl: string = environment.cdnUrl\n\n  openLinkInNewTab(url: string) {\n    window.open(url, '_blank')\n  }\n}\n",
            "styleUrl": "./article-preview.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"selectable-card\" appearance=\"outlined\" (click)=\"openLinkInNewTab(article.url)\">\n  <img class=\"card-image\" mat-card-image [src]=\"cdnUrl + article.image\" [alt]=\"article.title\" />\n\n  <mat-card-header>\n    <mat-card-title>\n      {{ article.title }}\n    </mat-card-title>\n    <mat-card-subtitle>{{ article.publishedDate }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content class=\"card-content\">\n    <p>\n      {{ article.content }}\n    </p>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "ArticlePreviewListComponent",
            "id": "component-ArticlePreviewListComponent-7f6ace44c2153191e98f00bdefdb83ed0b62c7a014c103e6e449f025b532b21c85c08c6964095e821b4a335e60505170013428040907c0e39b79084355617a47",
            "file": "src/app/components/article-preview-list/article-preview-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-article-preview-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./article-preview-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "articlePreviews",
                    "defaultValue": "this.articlePreviewService.articlePreviews",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "articlePreviewService",
                    "defaultValue": "inject(ArticlePreviewService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ArticlePreviewComponent",
                    "type": "component"
                },
                {
                    "name": "MatGridListModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core'\nimport { ArticlePreviewComponent } from '../article-preview/article-preview.component'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { ArticlePreviewService } from './article-preview.service'\n\n@Component({\n  selector: 'rmz-article-preview-list',\n  imports: [ArticlePreviewComponent, MatGridListModule],\n  templateUrl: './article-preview-list.component.html',\n  styleUrl: './article-preview-list.component.scss',\n})\nexport class ArticlePreviewListComponent {\n  private articlePreviewService = inject(ArticlePreviewService)\n  readonly articlePreviews = this.articlePreviewService.articlePreviews\n}\n",
            "styleUrl": "./article-preview-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"card-preview-list-layout\">\n  @for (articlePreview of articlePreviews(); track articlePreview.id) {\n    <rmz-article-preview [article]=\"articlePreview\" />\n  }\n</div>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-2f2033da2445a6c14337d154153ba7aa0cd56f4e68f8c9618fd7ded9d69eed0737be4249b5a54e4500274cabc021dc8e0af128cea66ba9ae1148cbbe49388e88",
            "file": "src/app/core/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCopyrightInformation",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatDividerModule } from '@angular/material/divider'\n\n@Component({\n  selector: 'rmz-footer',\n  imports: [MatDividerModule],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss',\n})\nexport class FooterComponent {\n  getCopyrightInformation() {\n    return 'Copyright © ' + new Date().getFullYear() + ' Rimaz Mohommed'\n  }\n}\n",
            "styleUrl": "./footer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<footer>\n  <mat-divider></mat-divider>\n  <h3 class=\"footer-info\">{{ getCopyrightInformation() }}</h3>\n</footer>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a4c5db208aa5b21288b1fa4f7313fb625842d757fd2ddbee06cfaf5715cf727eab34cffdf204b68aa027cee6c1056829073376340cbf43079ec4f48b5701f00e",
            "file": "src/app/core/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isDark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "routerTokens",
                    "defaultValue": "RouterTokens",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLightMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { ThemeService } from '@core/services/theme.services'\nimport { RouterLink } from '@angular/router'\nimport { RouterTokens } from '../../../app.routes'\n\n@Component({\n  selector: 'rmz-header',\n  imports: [MatToolbarModule, MatButtonModule, MatIconModule, RouterLink],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\nexport class HeaderComponent {\n  isDark = false\n  readonly routerTokens = RouterTokens\n\n  constructor(private themeService: ThemeService) {\n    this.isDark = this.themeService.getIsDark()\n  }\n\n  setDarkMode(): void {\n    this.isDark = this.themeService.setDarkMode()\n  }\n  setLightMode(): void {\n    this.isDark = this.themeService.setLightMode()\n  }\n}\n",
            "styleUrl": "./header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<mat-toolbar class=\"sticky-toolbar\">\n  <a class=\"logo-link\" [routerLink]=\"routerTokens.home\">\n    <div class=\"logo\">\n      <span class=\"mat-title\">Rimaz Mohommed</span>\n      <span class=\"mat-caption\">Full Stack Developer • DevOps Engineer</span>\n    </div>\n  </a>\n  <span class=\"header-spacer\"></span>\n  <button mat-icon-button aria-label=\"menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  @if (isDark) {\n    <button mat-icon-button aria-label=\"light mode icon\" (click)=\"setLightMode()\">\n      <mat-icon>light_mode</mat-icon>\n    </button>\n  } @else {\n    <button mat-icon-button aria-label=\"dark mode icon\" (click)=\"setDarkMode()\">\n      <mat-icon>dark_mode</mat-icon>\n    </button>\n  }\n</mat-toolbar>\n"
        },
        {
            "name": "HeroComponent",
            "id": "component-HeroComponent-419e42960ebc55c52db6e3c6d56b9cc1d2fed9d9898ae59d7f3722c14d8d6f1ca60dd0b3cdd8f16af5dcb5904a571d0ffdacd81ecc3a93409db1846d0cb51e8d",
            "file": "src/app/components/hero/hero.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-hero",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hero.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, effect, ElementRef, Renderer2 } from '@angular/core'\nimport { MatCardModule } from '@angular/material/card'\nimport { ThemeService } from '@core/services/theme.services'\nimport { CdnRoutes } from '@shared/constants/app.constants'\nimport { environment } from 'environments/environment'\n\n@Component({\n  selector: 'rmz-hero',\n  imports: [MatCardModule],\n  templateUrl: './hero.component.html',\n  styleUrl: './hero.component.scss',\n})\nexport class HeroComponent {\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private themeService: ThemeService,\n  ) {\n    effect(() => {\n      this.renderer.setStyle(\n        this.el.nativeElement.querySelector('.hero-container'),\n        'background-image',\n        this.themeService.getIsDark()\n          ? `url(${environment.cdnUrl}${CdnRoutes.heroImageDark})`\n          : `url(${environment.cdnUrl}${CdnRoutes.heroImageLight})`,\n      )\n    })\n  }\n}\n",
            "styleUrl": "./hero.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<mat-card class=\"hero-container mat-elevation-z4\">\n  <mat-card-content class=\"hero-content\">\n    <h1 class=\"mat-h1\">I am a full stack .NET developer specializing in Azure.</h1>\n    <h2 class=\"mat-h2\">Welcome to my blog!</h2>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-df28191ee0d3aad4ab3fa0b9e81cbd971f3045db0c7f2ad1114d3f3bf59102d7d708fd08d53bb3e80b45fca28a23a15682da2aea1e2eac12dc6429c042db7efd",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "HeroComponent",
                    "type": "component"
                },
                {
                    "name": "SocialHandlesBandComponent",
                    "type": "component"
                },
                {
                    "name": "ArticlePreviewListComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { ArticlePreviewListComponent } from '@components/article-preview-list/article-preview-list.component'\nimport { HeroComponent } from '@components/hero/hero.component'\nimport { SocialHandlesBandComponent } from '@components/social-handles-band/social-handles-band.component'\n\n@Component({\n  selector: 'rmz-home',\n  imports: [HeroComponent, SocialHandlesBandComponent, ArticlePreviewListComponent],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent {}\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<rmz-hero />\n<rmz-social-handles-band />\n<rmz-article-preview-list />\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-a80c7029fe58bfe143c00fba0e8341231ddd183e0d444678ba65b7c4b0cd01e65404f3d004dc27e748afb7582e6fa69e590574f2f89e91062101871f8896996e",
            "file": "src/app/pages/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-page-not-found",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "routerTokens",
                    "defaultValue": "RouterTokens",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatCardModule } from '@angular/material/card'\nimport { RouterLink } from '@angular/router'\nimport { RouterTokens } from '../../app.routes'\nimport { MatButtonModule } from '@angular/material/button'\n\n@Component({\n  selector: 'rmz-page-not-found',\n  imports: [MatCardModule, RouterLink, MatButtonModule],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.scss',\n})\nexport class PageNotFoundComponent {\n  readonly routerTokens = RouterTokens\n}\n",
            "styleUrl": "./page-not-found.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"not-found-container mat-elevation-z4\">\n  <mat-card-content class=\"not-found-content\">\n    <h1 class=\"mat-h1\">We are sorry, the page you requested cannot be found.</h1>\n    <h2 class=\"mat-h2\">\n      The URL may be misspelled or the page you're looking for is no longer available.\n    </h2>\n    <div class=\"user-options\">\n      <button mat-raised-button [routerLink]=\"routerTokens.home\">Back to Home</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "SocialHandleComponent",
            "id": "component-SocialHandleComponent-fca5cac67874edd3b69fdcf42c95389dcc971fae627fbdb34d9cdbf90f51b1ab1aa03afb5ffd7675fd1a6714cdac1f7207eb6a34dc6a2230c78ccc0a3f060618",
            "file": "src/app/components/social-handle/social-handle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-social-handle",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./social-handle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "socialHandle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ISocialHandle",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openLinkInNewTab",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatIconModule } from '@angular/material/icon'\nimport { ISocialHandle } from '@models/social-handle.model'\n\n@Component({\n  selector: 'rmz-social-handle',\n  imports: [MatIconModule, MatButtonModule],\n  templateUrl: './social-handle.component.html',\n  styleUrl: './social-handle.component.scss',\n})\nexport class SocialHandleComponent {\n  @Input() socialHandle!: ISocialHandle\n\n  openLinkInNewTab(url: string) {\n    window.open(url, '_blank')\n  }\n}\n",
            "styleUrl": "./social-handle.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"handle\">\n  <button mat-fab (click)=\"openLinkInNewTab(socialHandle.url)\">\n    <mat-icon [svgIcon]=\"socialHandle.name\"></mat-icon>\n  </button>\n</div>\n"
        },
        {
            "name": "SocialHandlesBandComponent",
            "id": "component-SocialHandlesBandComponent-8945225f1cf08c52a06958c1c2f93ada934e4aca31f4fb8648dc609c15e66944d4c62aa74f3d95128745784b0cbad5d8b003b21696d6078980d40c1b8b81ac70",
            "file": "src/app/components/social-handles-band/social-handles-band.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-social-handles-band",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./social-handles-band.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "socialHandles",
                    "defaultValue": "this.socialHandlesService.socialHandles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "socialHandlesApiError",
                    "defaultValue": "this.socialHandlesService.socialHandlesError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "socialHandlesService",
                    "defaultValue": "inject(SocialHandlesService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "SocialHandleComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core'\nimport { MatDividerModule } from '@angular/material/divider'\nimport { MatIconModule } from '@angular/material/icon'\nimport { SocialHandleComponent } from '@components/social-handle/social-handle.component'\nimport { SocialHandlesService } from '@components/social-handles-band/social-handles.service'\n\n@Component({\n  selector: 'rmz-social-handles-band',\n  imports: [MatDividerModule, MatIconModule, SocialHandleComponent],\n  templateUrl: './social-handles-band.component.html',\n  styleUrl: './social-handles-band.component.scss',\n})\nexport class SocialHandlesBandComponent {\n  private socialHandlesService = inject(SocialHandlesService)\n  readonly socialHandles = this.socialHandlesService.socialHandles\n  readonly socialHandlesApiError = this.socialHandlesService.socialHandlesError\n}\n",
            "styleUrl": "./social-handles-band.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"social-handles-section\">\n  <mat-divider></mat-divider>\n  <div class=\"handles\">\n    @for (socialHandle of socialHandles(); track socialHandle.name) {\n      <rmz-social-handle [socialHandle]=\"socialHandle\"></rmz-social-handle>\n    }\n    @if (socialHandlesApiError()?.statusCode) {\n      <span>{{ socialHandlesApiError()?.message }}</span>\n    }\n  </div>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(withInterceptors([apimSubscriptionHeaderInterceptor])),\n    provideAppInitializer(() => inject(IconService).init()),\n  ],\n}"
            },
            {
                "name": "appTheme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/app.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'app-theme'"
            },
            {
                "name": "darkMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/app.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'dark-mode'"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  integrationsApimUrl: 'https://rimaz-dev-backend-apim.azure-api.net/v1/api/',\n  integrationsApimSubscriptionKey: 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n  cdnUrl: 'https://cdn.rimaz.dev/',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  integrationsApimUrl: 'https://rimaz-dev-backend-apim.azure-api.net/v1/api/',\n  integrationsApimSubscriptionKey: 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n  cdnUrl: 'https://cdn.rimaz.dev/',\n}"
            }
        ],
        "functions": [
            {
                "name": "apimSubscriptionHeaderInterceptor",
                "file": "src/app/core/interceptors/apim-subscription-header.interceptor.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "req",
                        "type": "HttpRequest",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "next",
                        "type": "HttpHandlerFn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Observable<HttpEvent<>>",
                "jsdoctags": [
                    {
                        "name": "req",
                        "type": "HttpRequest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "next",
                        "type": "HttpHandlerFn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ApiRoutes",
                "childs": [
                    {
                        "name": "socialHandles",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "socialhandles"
                    },
                    {
                        "name": "articlePreviews",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "blogPreviews"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "CdnRoutes",
                "childs": [
                    {
                        "name": "heroImageDark",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "app/hero-dark.jpg"
                    },
                    {
                        "name": "heroImageLight",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "app/hero-light.jpg"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "ErrorMessages",
                "childs": [
                    {
                        "name": "Unknown_Error",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "An unknown error occurred."
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "HttpRequestHeaders",
                "childs": [
                    {
                        "name": "apimSubscriptionKey",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ocp-apim-subscription-key"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "IconNames",
                "childs": [
                    {
                        "name": "Github",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Github"
                    },
                    {
                        "name": "Medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Medium"
                    },
                    {
                        "name": "Linkedin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Linkedin"
                    },
                    {
                        "name": "StackOverflow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Stackoverflow"
                    },
                    {
                        "name": "TwitterX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Twitter"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "IconResourceUrls",
                "childs": [
                    {
                        "name": "Github",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/github.svg"
                    },
                    {
                        "name": "Medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/medium.svg"
                    },
                    {
                        "name": "Linkedin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/linkedin.svg"
                    },
                    {
                        "name": "StackOverflow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/stack-overflow.svg"
                    },
                    {
                        "name": "TwitterX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/twitter-x.svg"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "RouterTokens",
                "childs": [
                    {
                        "name": "home",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": ""
                    },
                    {
                        "name": "wildcard",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "**"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app.routes.ts"
            }
        ],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(withInterceptors([apimSubscriptionHeaderInterceptor])),\n    provideAppInitializer(() => inject(IconService).init()),\n  ],\n}"
                }
            ],
            "src/app/shared/constants/app.constants.ts": [
                {
                    "name": "appTheme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/app.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'app-theme'"
                },
                {
                    "name": "darkMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/app.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'dark-mode'"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  integrationsApimUrl: 'https://rimaz-dev-backend-apim.azure-api.net/v1/api/',\n  integrationsApimSubscriptionKey: 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n  cdnUrl: 'https://cdn.rimaz.dev/',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  integrationsApimUrl: 'https://rimaz-dev-backend-apim.azure-api.net/v1/api/',\n  integrationsApimSubscriptionKey: 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n  cdnUrl: 'https://cdn.rimaz.dev/',\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/interceptors/apim-subscription-header.interceptor.ts": [
                {
                    "name": "apimSubscriptionHeaderInterceptor",
                    "file": "src/app/core/interceptors/apim-subscription-header.interceptor.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandlerFn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Observable<HttpEvent<>>",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandlerFn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/constants/app.constants.ts": [
                {
                    "name": "ApiRoutes",
                    "childs": [
                        {
                            "name": "socialHandles",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "socialhandles"
                        },
                        {
                            "name": "articlePreviews",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "blogPreviews"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "CdnRoutes",
                    "childs": [
                        {
                            "name": "heroImageDark",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "app/hero-dark.jpg"
                        },
                        {
                            "name": "heroImageLight",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "app/hero-light.jpg"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "ErrorMessages",
                    "childs": [
                        {
                            "name": "Unknown_Error",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "An unknown error occurred."
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "HttpRequestHeaders",
                    "childs": [
                        {
                            "name": "apimSubscriptionKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ocp-apim-subscription-key"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "IconNames",
                    "childs": [
                        {
                            "name": "Github",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Github"
                        },
                        {
                            "name": "Medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Medium"
                        },
                        {
                            "name": "Linkedin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Linkedin"
                        },
                        {
                            "name": "StackOverflow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Stackoverflow"
                        },
                        {
                            "name": "TwitterX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Twitter"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "IconResourceUrls",
                    "childs": [
                        {
                            "name": "Github",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/github.svg"
                        },
                        {
                            "name": "Medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/medium.svg"
                        },
                        {
                            "name": "Linkedin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/linkedin.svg"
                        },
                        {
                            "name": "StackOverflow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/stack-overflow.svg"
                        },
                        {
                            "name": "TwitterX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/twitter-x.svg"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "RouterTokens",
                    "childs": [
                        {
                            "name": "home",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": ""
                        },
                        {
                            "name": "wildcard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "**"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app.routes.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/article-preview-list/article-preview-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticlePreviewListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/article-preview-list/article-preview.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ArticlePreviewService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/article-preview/article-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticlePreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/hero/hero.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeroComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-handle/social-handle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialHandleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-handles-band/social-handles-band.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialHandlesBandComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-handles-band/social-handles.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SocialHandlesService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/apim-subscription-header.interceptor.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "apimSubscriptionHeaderInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/error.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ErrorService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/icon.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IconService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/theme.services.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/models/article.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IArticle",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/models/error.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/result.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Result",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/social-handle.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISocialHandle",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/app.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/app.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "darkMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}