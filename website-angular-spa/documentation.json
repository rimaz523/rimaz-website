{
    "pipes": [],
    "interfaces": [
        {
            "name": "ISocialHandle",
            "id": "interface-ISocialHandle-f092a6ebdc40828ee053e0fc6a6aa96a8b249e031f4c9d069d14a4267f7df824e2ad469308e7b7f9957cbfbd45707e713e6c782edbf05a4ec9d6d4a3c4d4cbc2",
            "file": "src/app/models/social-handle.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISocialHandle {\n  name: string\n  url: string\n  displayOrder: number\n}\n",
            "properties": [
                {
                    "name": "displayOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "IconService",
            "id": "injectable-IconService-f9b663b8116f16cfa195b34cbda5783e02c3ab7911a2c74c42bf24d1e198820d324b600f7236ae704844871220d61437c56212dd33c0b17aba9f41b78d5351cf",
            "file": "src/app/core/services/icon.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { IconNames, IconResourceUrls } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconService {\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n  ) {}\n\n  init() {\n    this.matIconRegistry.addSvgIcon(\n      IconNames.Medium,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.Medium),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.StackOverflow,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.StackOverflow),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.TwitterX,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.TwitterX),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.Linkedin,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.Linkedin),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.Github,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.Github),\n    )\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matIconRegistry",
                        "type": "MatIconRegistry",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "domSanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "matIconRegistry",
                        "type": "MatIconRegistry",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "domSanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SocialHandlesService",
            "id": "injectable-SocialHandlesService-b26aac1cc00d0e77ead59ce6b16ff1057dca4d9383f357b06cbbfd1cf06523977004a2dd7c63acd951767304e34de95fd12dc965ee2928a77db9b967fc3d0625",
            "file": "src/app/components/social-handles-band/social-handles.service.ts",
            "properties": [
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "socialHandles$",
                    "defaultValue": "this.http.get<ISocialHandle[]>(\n    'https://rimaz-dev-backend-apim.azure-api.net/v1/api/socialhandles',\n    {\n      headers: {\n        'ocp-apim-subscription-key': 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n      },\n    },\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\nimport { inject, Injectable } from '@angular/core'\nimport { ISocialHandle } from '@models/social-handle.model'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocialHandlesService {\n  private http = inject(HttpClient)\n  readonly socialHandles$ = this.http.get<ISocialHandle[]>(\n    'https://rimaz-dev-backend-apim.azure-api.net/v1/api/socialhandles',\n    {\n      headers: {\n        'ocp-apim-subscription-key': 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n      },\n    },\n  )\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-cda45bc4144febfb6d04537b39b737b251befec3f5c2ab26f0e38542b5d29ab50f2ede9bfe0cd31d4609139721ec82f620a625365d10383997fb40bac754f1fa",
            "file": "src/app/core/services/theme.services.ts",
            "properties": [
                {
                    "name": "isDark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [
                {
                    "name": "getIsDark",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLightMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { APP_THEME, DARK_MODE } from '@shared/constants/app.constants'\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  isDark = false\n\n  constructor() {\n    this.loadTheme()\n  }\n\n  loadTheme(): void {\n    const theme = localStorage.getItem(APP_THEME)\n    if (theme === DARK_MODE) {\n      document.documentElement.classList.add(DARK_MODE)\n      this.isDark = true\n    } else {\n      document.documentElement.classList.remove(DARK_MODE)\n    }\n  }\n\n  setDarkMode(): boolean {\n    this.isDark = true\n    document.documentElement.classList.add(DARK_MODE)\n    localStorage.setItem(APP_THEME, DARK_MODE)\n    return this.isDark\n  }\n\n  setLightMode(): boolean {\n    this.isDark = false\n    document.documentElement.classList.remove(DARK_MODE)\n    localStorage.removeItem(APP_THEME)\n    return this.isDark\n  }\n\n  getIsDark(): boolean {\n    return this.isDark\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0348cfb31f3e879734eec5c22a36b1345ef0dbda177c95ae450225c5e01209239d28dea16155b82eb6a6128c2e94faea688fd6e00a4837950021d431e96fb5e2",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'website-angular-spa'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { HeaderComponent } from '@core/components/header/header.component'\nimport { ThemeService } from '@core/services/theme.services'\nimport { FooterComponent } from '@core/components/footer/footer.component'\n\n@Component({\n  selector: 'rmz-root',\n  imports: [RouterOutlet, HeaderComponent, FooterComponent],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'website-angular-spa'\n\n  constructor(private themeService: ThemeService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<rmz-header></rmz-header>\n<router-outlet />\n<rmz-footer></rmz-footer>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-2f2033da2445a6c14337d154153ba7aa0cd56f4e68f8c9618fd7ded9d69eed0737be4249b5a54e4500274cabc021dc8e0af128cea66ba9ae1148cbbe49388e88",
            "file": "src/app/core/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCopyrightInformation",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatDividerModule } from '@angular/material/divider'\n\n@Component({\n  selector: 'rmz-footer',\n  imports: [MatDividerModule],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss',\n})\nexport class FooterComponent {\n  getCopyrightInformation() {\n    return 'Copyright © ' + new Date().getFullYear() + ' Rimaz Mohommed'\n  }\n}\n",
            "styleUrl": "./footer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<footer>\n  <mat-divider></mat-divider>\n  <h3 class=\"footer-info\">{{ getCopyrightInformation() }}</h3>\n</footer>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-951fe96e0f9dce9b4c7e5d44d69d8fd77463e68ad40b1113c21b2089342e3006cc9f9e53c4bf5f466ffa75a275cf6c9438d6d223bc6d624e82635d5debddb6c7",
            "file": "src/app/core/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isDark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "ROUTER_TOKENS",
                    "defaultValue": "ROUTER_TOKENS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLightMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "NgIf"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { NgIf } from '@angular/common'\nimport { ThemeService } from '@core/services/theme.services'\nimport { RouterLink } from '@angular/router'\nimport { ROUTER_TOKENS } from '../../../app.routes'\n\n@Component({\n  selector: 'rmz-header',\n  imports: [MatToolbarModule, MatButtonModule, MatIconModule, NgIf, RouterLink],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\nexport class HeaderComponent {\n  isDark = false\n  readonly ROUTER_TOKENS = ROUTER_TOKENS\n\n  constructor(private themeService: ThemeService) {\n    this.isDark = this.themeService.getIsDark()\n  }\n\n  setDarkMode(): void {\n    this.isDark = this.themeService.setDarkMode()\n  }\n  setLightMode(): void {\n    this.isDark = this.themeService.setLightMode()\n  }\n}\n",
            "styleUrl": "./header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<mat-toolbar class=\"sticky-toolbar\">\n  <a class=\"logo-link\" [routerLink]=\"ROUTER_TOKENS.HOME\">\n    <div class=\"logo\">\n      <span class=\"mat-title\">Rimaz Mohommed</span>\n      <span class=\"mat-caption\">Full Stack Developer • DevOps Engineer</span>\n    </div>\n  </a>\n  <span class=\"header-spacer\"></span>\n  <button mat-icon-button aria-label=\"menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <button *ngIf=\"isDark\" mat-icon-button aria-label=\"light mode icon\" (click)=\"setLightMode()\">\n    <mat-icon>light_mode</mat-icon>\n  </button>\n  <button *ngIf=\"!isDark\" mat-icon-button aria-label=\"dark mode icon\" (click)=\"setDarkMode()\">\n    <mat-icon>dark_mode</mat-icon>\n  </button>\n</mat-toolbar>\n"
        },
        {
            "name": "HeroComponent",
            "id": "component-HeroComponent-36d905b2f8cfd2c9bfb073b724d0b353f51dac7adb716540c7b93c3d594fec6f1d38919fb4af960b6cd2eabe2c97ef5cf0c1f18d09671cb5bbe671bc3a1d827f",
            "file": "src/app/components/hero/hero.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-hero",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hero.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatCardModule } from '@angular/material/card'\n\n@Component({\n  selector: 'rmz-hero',\n  imports: [MatCardModule],\n  templateUrl: './hero.component.html',\n  styleUrl: './hero.component.scss',\n})\nexport class HeroComponent {}\n",
            "styleUrl": "./hero.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"hero-container mat-elevation-z4\">\n  <mat-card-content class=\"hero-content\">\n    <h1 class=\"mat-h1\">I am a full stack .NET developer specializing in Azure.</h1>\n    <h2 class=\"mat-h2\">Welcome to my blog!</h2>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-8350a5f1a6cbbff6406c37aa53533ebe282f6ed9b14868275ae55906bacf20f0fbf0c7f473b1083daf939d23ab679b00cfce86dc24bfd2b69d7b19279c56f6ef",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "HeroComponent",
                    "type": "component"
                },
                {
                    "name": "SocialHandlesBandComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { HeroComponent } from '@components/hero/hero.component'\nimport { SocialHandlesBandComponent } from '@components/social-handles-band/social-handles-band.component'\n\n@Component({\n  selector: 'rmz-home',\n  imports: [HeroComponent, SocialHandlesBandComponent],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent {}\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<rmz-hero></rmz-hero>\n<rmz-social-handles-band></rmz-social-handles-band>\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-b0c241d171bd20fc903e971de101207ceb3abdb9658baae3156d806bb31fad10e46cadd54f5afc110e371aafc6fc30187f6041c4f489109f0743ff861051b194",
            "file": "src/app/pages/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-page-not-found",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ROUTER_TOKENS",
                    "defaultValue": "ROUTER_TOKENS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatCardModule } from '@angular/material/card'\nimport { RouterLink } from '@angular/router'\nimport { ROUTER_TOKENS } from '../../app.routes'\nimport { MatButtonModule } from '@angular/material/button'\n\n@Component({\n  selector: 'rmz-page-not-found',\n  imports: [MatCardModule, RouterLink, MatButtonModule],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.scss',\n})\nexport class PageNotFoundComponent {\n  readonly ROUTER_TOKENS = ROUTER_TOKENS\n}\n",
            "styleUrl": "./page-not-found.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"not-found-container mat-elevation-z4\">\n  <mat-card-content class=\"not-found-content\">\n    <h1 class=\"mat-h1\">We are sorry, the page you requested cannot be found.</h1>\n    <h2 class=\"mat-h2\">\n      The URL may be misspelled or the page you're looking for is no longer available.\n    </h2>\n    <div class=\"user-options\">\n      <button mat-raised-button [routerLink]=\"ROUTER_TOKENS.HOME\">Back to Home</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "SocialHandleComponent",
            "id": "component-SocialHandleComponent-fca5cac67874edd3b69fdcf42c95389dcc971fae627fbdb34d9cdbf90f51b1ab1aa03afb5ffd7675fd1a6714cdac1f7207eb6a34dc6a2230c78ccc0a3f060618",
            "file": "src/app/components/social-handle/social-handle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-social-handle",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./social-handle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "socialHandle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ISocialHandle",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openLinkInNewTab",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatIconModule } from '@angular/material/icon'\nimport { ISocialHandle } from '@models/social-handle.model'\n\n@Component({\n  selector: 'rmz-social-handle',\n  imports: [MatIconModule, MatButtonModule],\n  templateUrl: './social-handle.component.html',\n  styleUrl: './social-handle.component.scss',\n})\nexport class SocialHandleComponent {\n  @Input() socialHandle!: ISocialHandle\n\n  openLinkInNewTab(url: string) {\n    window.open(url, '_blank')\n  }\n}\n",
            "styleUrl": "./social-handle.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"handle\">\n  <button mat-fab (click)=\"openLinkInNewTab(socialHandle.url)\">\n    <mat-icon [svgIcon]=\"socialHandle.name\"></mat-icon>\n  </button>\n</div>\n"
        },
        {
            "name": "SocialHandlesBandComponent",
            "id": "component-SocialHandlesBandComponent-a2148f4b7cbbae02204f3b47c540c9ce795c496349741b765e8aae1c21eb20790c657ab986106d727ed461aee3b3079e4b159a988b23ac80a683d263b84d6107",
            "file": "src/app/components/social-handles-band/social-handles-band.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-social-handles-band",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./social-handles-band.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "socialHandles$",
                    "defaultValue": "this.socialHandlesService.socialHandles$.pipe(shareReplay(1))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "socialHandlesService",
                    "defaultValue": "inject(SocialHandlesService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "SocialHandleComponent",
                    "type": "component"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core'\nimport { MatDividerModule } from '@angular/material/divider'\nimport { MatIconModule } from '@angular/material/icon'\nimport { SocialHandleComponent } from '@components/social-handle/social-handle.component'\nimport { AsyncPipe } from '@angular/common'\nimport { SocialHandlesService } from '@components/social-handles-band/social-handles.service'\nimport { shareReplay } from 'rxjs'\n\n@Component({\n  selector: 'rmz-social-handles-band',\n  imports: [MatDividerModule, MatIconModule, SocialHandleComponent, AsyncPipe],\n  templateUrl: './social-handles-band.component.html',\n  styleUrl: './social-handles-band.component.scss',\n})\nexport class SocialHandlesBandComponent {\n  private socialHandlesService = inject(SocialHandlesService)\n  readonly socialHandles$ = this.socialHandlesService.socialHandles$.pipe(shareReplay(1))\n}\n",
            "styleUrl": "./social-handles-band.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"social-handles-section\">\n  <mat-divider></mat-divider>\n  <div class=\"handles\">\n    @for (socialHandle of socialHandles$ | async; track socialHandle.name) {\n      <rmz-social-handle [socialHandle]=\"socialHandle\"></rmz-social-handle>\n    }\n  </div>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "APP_THEME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/app.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'app-theme'"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(),\n    provideAppInitializer(() => inject(IconService).init()),\n  ],\n}"
            },
            {
                "name": "DARK_MODE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/app.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'dark-mode'"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "IconNames",
                "childs": [
                    {
                        "name": "Github",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Github"
                    },
                    {
                        "name": "Medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Medium"
                    },
                    {
                        "name": "Linkedin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Linkedin"
                    },
                    {
                        "name": "StackOverflow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Stackoverflow"
                    },
                    {
                        "name": "TwitterX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Twitter"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "IconResourceUrls",
                "childs": [
                    {
                        "name": "Github",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/github.svg"
                    },
                    {
                        "name": "Medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/medium.svg"
                    },
                    {
                        "name": "Linkedin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/linkedin.svg"
                    },
                    {
                        "name": "StackOverflow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/stack-overflow.svg"
                    },
                    {
                        "name": "TwitterX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/twitter-x.svg"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "ROUTER_TOKENS",
                "childs": [
                    {
                        "name": "HOME",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": ""
                    },
                    {
                        "name": "WILDCARD",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "**"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app.routes.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/constants/app.constants.ts": [
                {
                    "name": "APP_THEME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/app.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'app-theme'"
                },
                {
                    "name": "DARK_MODE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/app.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'dark-mode'"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(),\n    provideAppInitializer(() => inject(IconService).init()),\n  ],\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/shared/constants/app.constants.ts": [
                {
                    "name": "IconNames",
                    "childs": [
                        {
                            "name": "Github",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Github"
                        },
                        {
                            "name": "Medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Medium"
                        },
                        {
                            "name": "Linkedin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Linkedin"
                        },
                        {
                            "name": "StackOverflow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Stackoverflow"
                        },
                        {
                            "name": "TwitterX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Twitter"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "IconResourceUrls",
                    "childs": [
                        {
                            "name": "Github",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/github.svg"
                        },
                        {
                            "name": "Medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/medium.svg"
                        },
                        {
                            "name": "Linkedin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/linkedin.svg"
                        },
                        {
                            "name": "StackOverflow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/stack-overflow.svg"
                        },
                        {
                            "name": "TwitterX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/twitter-x.svg"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "ROUTER_TOKENS",
                    "childs": [
                        {
                            "name": "HOME",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": ""
                        },
                        {
                            "name": "WILDCARD",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "**"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app.routes.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/hero/hero.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeroComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-handle/social-handle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialHandleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-handles-band/social-handles-band.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialHandlesBandComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-handles-band/social-handles.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SocialHandlesService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/icon.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IconService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/theme.services.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/models/social-handle.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISocialHandle",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/app.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_THEME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/app.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DARK_MODE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}