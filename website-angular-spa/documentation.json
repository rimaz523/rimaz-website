{
    "pipes": [],
    "interfaces": [
        {
            "name": "ErrorModel",
            "id": "interface-ErrorModel-a6fd69555ea1c8e31538d87d2fac3ab25ef1f8d683440b57b299aac01ecb39da62e03ec359429b832ed3eb4f9479836062ab9d788ce037d0c2d63688abe541b7",
            "file": "src/app/core/models/error.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ErrorModel {\n  message?: string\n  statusCode: number | undefined\n}\n",
            "properties": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "statusCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IArticle",
            "id": "interface-IArticle-7ce6435af1a20113e9e00a6ade47a1fa900ac5f049aa4d17a83a004e8f41f33ef26586cffe1695193ea61120d27bebf3a0c7d631024966051e9cb070a8d5fa31",
            "file": "src/app/features/article/article.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IArticle {\n  id: string\n  slug: string\n  title: string\n  content: string\n  url: string\n  image: string\n  publishedDate: string\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "publishedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISocialHandle",
            "id": "interface-ISocialHandle-f092a6ebdc40828ee053e0fc6a6aa96a8b249e031f4c9d069d14a4267f7df824e2ad469308e7b7f9957cbfbd45707e713e6c782edbf05a4ec9d6d4a3c4d4cbc2",
            "file": "src/app/features/social/social-handle.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISocialHandle {\n  name: string\n  url: string\n  displayOrder: number\n}\n",
            "properties": [
                {
                    "name": "displayOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Result",
            "id": "interface-Result-ffea3d82968db8befcd36f1ce5050347b022233bafed04da02bf29a8ead87b76e55a0fea1057798b263e1b1cdf6dea693bc3e4c3e971a3f8036a72555c9f884c",
            "file": "src/app/core/models/result.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ErrorModel } from './error.model'\n\nexport interface Result<T> {\n  data: T | undefined\n  error?: ErrorModel\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErrorModel",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ArticlePreviewService",
            "id": "injectable-ArticlePreviewService-bffb6bc5cfd01f3b448753c612446c7d43ffc51cee234f89417945a6c4083c9bc1873cc33ec7a15532b14094188f2d7adc278bff59d9ba10ca1e3294e426242c",
            "file": "src/app/features/article/components/article-preview-list/article-preview.service.ts",
            "properties": [
                {
                    "name": "articlePreviewList$",
                    "defaultValue": "this.http\n    .get<IArticle[]>(`${environment.integrationsApimUrl}${ApiRoutes.articlePreviews}?limit=4`)\n    .pipe(\n      map(data => ({ data: data, error: undefined }) as Result<IArticle[]>),\n      shareReplay(1),\n      catchError(error =>\n        of({\n          data: [],\n          error: this.errorService.getErrorModel(error),\n        } as Result<IArticle[]>),\n      ),\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "articlePreviews",
                    "defaultValue": "computed(() => this.articlePreviewsResult().data)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "articlePreviewsError",
                    "defaultValue": "computed(() => this.articlePreviewsResult().error)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "articlePreviewsResult",
                    "defaultValue": "toSignal(this.articlePreviewList$, {\n    initialValue: { data: [] } as Result<IArticle[]>,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "errorService",
                    "defaultValue": "inject(ErrorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\nimport { computed, inject, Injectable } from '@angular/core'\nimport { toSignal } from '@angular/core/rxjs-interop'\nimport { catchError, map, of, shareReplay } from 'rxjs'\n\nimport { Result } from '@core/models/result.model'\nimport { ErrorService } from '@core/services/error.service'\nimport { environment } from 'environments/environment'\nimport { IArticle } from '@features/article/article.model'\nimport { ApiRoutes } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArticlePreviewService {\n  private http = inject(HttpClient)\n  private errorService = inject(ErrorService)\n\n  private readonly articlePreviewList$ = this.http\n    .get<IArticle[]>(`${environment.integrationsApimUrl}${ApiRoutes.articlePreviews}?limit=4`)\n    .pipe(\n      map(data => ({ data: data, error: undefined }) as Result<IArticle[]>),\n      shareReplay(1),\n      catchError(error =>\n        of({\n          data: [],\n          error: this.errorService.getErrorModel(error),\n        } as Result<IArticle[]>),\n      ),\n    )\n\n  private readonly articlePreviewsResult = toSignal(this.articlePreviewList$, {\n    initialValue: { data: [] } as Result<IArticle[]>,\n  })\n\n  readonly articlePreviews = computed(() => this.articlePreviewsResult().data)\n  readonly articlePreviewsError = computed(() => this.articlePreviewsResult().error)\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ErrorService",
            "id": "injectable-ErrorService-e4ab30ca7fbdb8bf713fbc6990b2e4a469246839682ac2d1d28f7191476e0df19ae3f585c67a28c5ac420d4be3571b47ff45d0b702d9f8e2b4fd67c1187fb8d6",
            "file": "src/app/core/services/error.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getErrorModel",
                    "args": [
                        {
                            "name": "genericError",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ErrorModel",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "genericError",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nimport { ErrorModel } from '@core/models/error.model'\nimport { ErrorMessages } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n  getErrorModel(genericError: unknown): ErrorModel {\n    const error: ErrorModel = {\n      message: ErrorMessages.unknown,\n      statusCode: undefined,\n    }\n\n    if (genericError instanceof HttpErrorResponse) {\n      error.message = genericError.error.message\n      error.statusCode = genericError.error.statusCode\n    } else if (genericError instanceof Error) {\n      error.message = genericError.message\n    }\n    return error\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "IconService",
            "id": "injectable-IconService-56686a10d99ee2abf570f919e539bdf06817c25e3e719e2d010b3861ce2bc066d7a9193429305086e457a326d0e4754dafb5b000f79d18dc9e38091425b6928f",
            "file": "src/app/core/services/icon.service.ts",
            "properties": [
                {
                    "name": "domSanitizer",
                    "defaultValue": "inject(DomSanitizer)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "matIconRegistry",
                    "defaultValue": "inject(MatIconRegistry)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from '@angular/core'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\n\nimport { IconNames, IconResourceUrls } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconService {\n  private matIconRegistry = inject(MatIconRegistry)\n  private domSanitizer = inject(DomSanitizer)\n\n  init() {\n    this.matIconRegistry.addSvgIcon(\n      IconNames.medium,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.medium),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.stackOverflow,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.stackOverflow),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.twitterX,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.twitterX),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.linkedin,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.linkedin),\n    )\n    this.matIconRegistry.addSvgIcon(\n      IconNames.github,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(IconResourceUrls.github),\n    )\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SocialHandlesService",
            "id": "injectable-SocialHandlesService-a4af2fd0ad1ebb90c4122c7af13fa0bdc2e52492af01601738709b4f9b70daa7c19c45a0c32d872f1ebfc863792f2e47bc36aec71fbeb51b6d006e65154a4864",
            "file": "src/app/features/social/components/social-handles-band/social-handles.service.ts",
            "properties": [
                {
                    "name": "errorService",
                    "defaultValue": "inject(ErrorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "socialHandles",
                    "defaultValue": "computed(() => this.socialHandlesResult().data)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "socialHandles$",
                    "defaultValue": "this.http\n    .get<ISocialHandle[]>(`${environment.integrationsApimUrl}${ApiRoutes.socialHandles}`)\n    .pipe(\n      map(data => ({ data: data, error: undefined }) as Result<ISocialHandle[]>),\n      shareReplay(1),\n      catchError(error =>\n        of({\n          data: [],\n          error: this.errorService.getErrorModel(error),\n        } as Result<ISocialHandle[]>),\n      ),\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "socialHandlesError",
                    "defaultValue": "computed(() => this.socialHandlesResult().error)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "socialHandlesResult",
                    "defaultValue": "toSignal(this.socialHandles$, {\n    initialValue: { data: [] } as Result<ISocialHandle[]>,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\nimport { computed, inject, Injectable } from '@angular/core'\nimport { ISocialHandle } from '@features/social/social-handle.model'\nimport { toSignal } from '@angular/core/rxjs-interop'\nimport { catchError, map, of, shareReplay } from 'rxjs'\n\nimport { Result } from '@core/models/result.model'\nimport { ErrorService } from '@core/services/error.service'\nimport { environment } from 'environments/environment'\nimport { ApiRoutes } from '@shared/constants/app.constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocialHandlesService {\n  private http = inject(HttpClient)\n  private errorService = inject(ErrorService)\n\n  private readonly socialHandles$ = this.http\n    .get<ISocialHandle[]>(`${environment.integrationsApimUrl}${ApiRoutes.socialHandles}`)\n    .pipe(\n      map(data => ({ data: data, error: undefined }) as Result<ISocialHandle[]>),\n      shareReplay(1),\n      catchError(error =>\n        of({\n          data: [],\n          error: this.errorService.getErrorModel(error),\n        } as Result<ISocialHandle[]>),\n      ),\n    )\n\n  private readonly socialHandlesResult = toSignal(this.socialHandles$, {\n    initialValue: { data: [] } as Result<ISocialHandle[]>,\n  })\n\n  readonly socialHandles = computed(() => this.socialHandlesResult().data)\n  readonly socialHandlesError = computed(() => this.socialHandlesResult().error)\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-91a05d728426b5e5af84f17b9daf7bb228c610b00abf55c8a667ef1c4bbb672956a6ac6591f59beb1311c506eb26fc1d0a20f0b4914e3f434262557f5fea361c",
            "file": "src/app/core/services/theme.services.ts",
            "properties": [
                {
                    "name": "isDark",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getIsDark",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLightMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core'\n\nimport { appTheme, darkMode } from '@shared/constants/app.constants'\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  readonly isDark = signal(false)\n\n  constructor() {\n    this.loadTheme()\n  }\n\n  loadTheme(): void {\n    const theme = localStorage.getItem(appTheme)\n    if (theme === darkMode) {\n      document.documentElement.classList.add(darkMode)\n      this.isDark.set(true)\n    } else {\n      document.documentElement.classList.remove(darkMode)\n    }\n  }\n\n  setDarkMode(): boolean {\n    this.isDark.set(true)\n    document.documentElement.classList.add(darkMode)\n    localStorage.setItem(appTheme, darkMode)\n    return this.isDark()\n  }\n\n  setLightMode(): boolean {\n    this.isDark.set(false)\n    document.documentElement.classList.remove(darkMode)\n    localStorage.removeItem(appTheme)\n    return this.isDark()\n  }\n\n  getIsDark(): boolean {\n    return this.isDark()\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6be37d9e0f33165182e18a7ab08a008ac5fedb6d713020f131322c3c6d510edbf38b398dcbe0c593312b0d4d761e7046896e344f422da1eb6b5d64bc85f62fae",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'website-angular-spa'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\n\nimport { HeaderComponent } from '@core/layout/header/header.component'\nimport { FooterComponent } from '@core/layout/footer/footer.component'\n\n@Component({\n  selector: 'rmz-root',\n  imports: [RouterOutlet, HeaderComponent, FooterComponent],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'website-angular-spa'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<rmz-header />\n<router-outlet />\n<rmz-footer />\n"
        },
        {
            "name": "ArticlePreviewComponent",
            "id": "component-ArticlePreviewComponent-6fcac781c13009e590f563da1b26bd97833c2a12e14c8f13dc06acfa0ee9ad1eb9cdfbdaaed8b75b4af77de2700ce889a995b42e32a2ce3e60a8ab6ac5cf1dee",
            "file": "src/app/features/article/components/article-preview/article-preview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-article-preview",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./article-preview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "cdnUrl",
                    "defaultValue": "environment.cdnUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "openLinkInNewTab",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input } from '@angular/core'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCardModule } from '@angular/material/card'\nimport { IArticle } from '@features/article/article.model'\n\nimport { environment } from 'environments/environment'\n\n@Component({\n  selector: 'rmz-article-preview',\n  imports: [MatCardModule, MatButtonModule],\n  templateUrl: './article-preview.component.html',\n  styleUrl: './article-preview.component.scss',\n})\nexport class ArticlePreviewComponent {\n  readonly article = input.required<IArticle>()\n\n  cdnUrl: string = environment.cdnUrl\n\n  openLinkInNewTab(url: string) {\n    window.open(url, '_blank')\n  }\n}\n",
            "styleUrl": "./article-preview.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"selectable-card\" appearance=\"outlined\" (click)=\"openLinkInNewTab(article().url)\">\n  <img class=\"card-image\" mat-card-image [src]=\"cdnUrl + article().image\" [alt]=\"article().title\" />\n\n  <mat-card-header>\n    <mat-card-title>\n      {{ article().title }}\n    </mat-card-title>\n    <mat-card-subtitle>{{ article().publishedDate }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content class=\"card-content\">\n    <p>\n      {{ article().content }}\n    </p>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "ArticlePreviewListComponent",
            "id": "component-ArticlePreviewListComponent-e4d4421f24c3bea3852957d9992bd572ec98180d3c77d30c0582a2c108942304569e6ec8d7278f08924712722b30ed5cc8053bc39845e8a2efd9f78c3ce0dbce",
            "file": "src/app/features/article/components/article-preview-list/article-preview-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-article-preview-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./article-preview-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "articlePreviews",
                    "defaultValue": "this.articlePreviewService.articlePreviews",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "articlePreviewService",
                    "defaultValue": "inject(ArticlePreviewService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ArticlePreviewComponent",
                    "type": "component"
                },
                {
                    "name": "MatGridListModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core'\nimport { MatGridListModule } from '@angular/material/grid-list'\n\nimport { ArticlePreviewComponent } from '@features/article/components/article-preview/article-preview.component'\nimport { ArticlePreviewService } from './article-preview.service'\n\n@Component({\n  selector: 'rmz-article-preview-list',\n  imports: [ArticlePreviewComponent, MatGridListModule],\n  templateUrl: './article-preview-list.component.html',\n  styleUrl: './article-preview-list.component.scss',\n})\nexport class ArticlePreviewListComponent {\n  private articlePreviewService = inject(ArticlePreviewService)\n  readonly articlePreviews = this.articlePreviewService.articlePreviews\n}\n",
            "styleUrl": "./article-preview-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"card-preview-list-layout\">\n  @for (articlePreview of articlePreviews(); track articlePreview.id) {\n    <rmz-article-preview [article]=\"articlePreview\" />\n  }\n</div>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-2f2033da2445a6c14337d154153ba7aa0cd56f4e68f8c9618fd7ded9d69eed0737be4249b5a54e4500274cabc021dc8e0af128cea66ba9ae1148cbbe49388e88",
            "file": "src/app/core/layout/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCopyrightInformation",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatDividerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatDividerModule } from '@angular/material/divider'\n\n@Component({\n  selector: 'rmz-footer',\n  imports: [MatDividerModule],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss',\n})\nexport class FooterComponent {\n  getCopyrightInformation() {\n    return 'Copyright © ' + new Date().getFullYear() + ' Rimaz Mohommed'\n  }\n}\n",
            "styleUrl": "./footer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<footer>\n  <mat-divider></mat-divider>\n  <h3 class=\"footer-info\">{{ getCopyrightInformation() }}</h3>\n</footer>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-33a5d5e53ab024c05861692214bbd5826602ea6a550862162a16d30f7786937378f21c3113c9cb0ea31cc12e8b60e422d7ce8df590ed1ea291598ff65e6e00dc",
            "file": "src/app/core/layout/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isDark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "routerTokens",
                    "defaultValue": "RouterTokens",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "themeService",
                    "defaultValue": "inject(ThemeService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLightMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { RouterLink } from '@angular/router'\n\nimport { ThemeService } from '@core/services/theme.services'\nimport { RouterTokens } from '../../../app.routes'\n\n@Component({\n  selector: 'rmz-header',\n  imports: [MatToolbarModule, MatButtonModule, MatIconModule, RouterLink],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\nexport class HeaderComponent {\n  private themeService = inject(ThemeService)\n\n  isDark = false\n  readonly routerTokens = RouterTokens\n\n  constructor() {\n    this.isDark = this.themeService.getIsDark()\n  }\n\n  setDarkMode(): void {\n    this.isDark = this.themeService.setDarkMode()\n  }\n  setLightMode(): void {\n    this.isDark = this.themeService.setLightMode()\n  }\n}\n",
            "styleUrl": "./header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": [],
            "templateData": "<mat-toolbar class=\"sticky-toolbar\">\n  <a class=\"logo-link\" [routerLink]=\"routerTokens.home\">\n    <div class=\"logo\">\n      <span class=\"mat-title\">Rimaz Mohommed</span>\n      <span class=\"mat-caption\">Full Stack Developer • DevOps Engineer</span>\n    </div>\n  </a>\n  <span class=\"header-spacer\"></span>\n  <button mat-icon-button aria-label=\"menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  @if (isDark) {\n    <button mat-icon-button aria-label=\"light mode icon\" (click)=\"setLightMode()\">\n      <mat-icon>light_mode</mat-icon>\n    </button>\n  } @else {\n    <button mat-icon-button aria-label=\"dark mode icon\" (click)=\"setDarkMode()\">\n      <mat-icon>dark_mode</mat-icon>\n    </button>\n  }\n</mat-toolbar>\n"
        },
        {
            "name": "HeroComponent",
            "id": "component-HeroComponent-e19d34bc4d602c5d1081da8c2dd84847bcb61a7cfedf7cda2cdcd567059b1290c1dde85d283cb3c6d89c36fac6a85afba785e0d919b5b456e09920c8acd10677",
            "file": "src/app/features/hero/hero.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-hero",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hero.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "defaultValue": "inject(ElementRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "renderer",
                    "defaultValue": "inject(Renderer2)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "themeService",
                    "defaultValue": "inject(ThemeService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, effect, ElementRef, inject, Renderer2 } from '@angular/core'\nimport { MatCardModule } from '@angular/material/card'\n\nimport { ThemeService } from '@core/services/theme.services'\nimport { CdnRoutes } from '@shared/constants/app.constants'\nimport { environment } from 'environments/environment'\n\n@Component({\n  selector: 'rmz-hero',\n  imports: [MatCardModule],\n  templateUrl: './hero.component.html',\n  styleUrl: './hero.component.scss',\n})\nexport class HeroComponent {\n  private elementRef = inject(ElementRef)\n  private renderer = inject(Renderer2)\n  private themeService = inject(ThemeService)\n\n  constructor() {\n    effect(() => {\n      this.renderer.setStyle(\n        this.elementRef.nativeElement.querySelector('.hero-container'),\n        'background-image',\n        this.themeService.getIsDark()\n          ? `url(${environment.cdnUrl}${CdnRoutes.heroImageDark})`\n          : `url(${environment.cdnUrl}${CdnRoutes.heroImageLight})`,\n      )\n    })\n  }\n}\n",
            "styleUrl": "./hero.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "templateData": "<mat-card class=\"hero-container mat-elevation-z4\">\n  <mat-card-content class=\"hero-content\">\n    <h1 class=\"mat-h1\">I am a full stack .NET developer specializing in Azure.</h1>\n    <h2 class=\"mat-h2\">Welcome to my blog!</h2>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-a2a26a4256f14b4f04ee0c8139bdf34279d244a64ef552cdb3b98485e03e1b6bb98a60ba5e1443ef539cc31169cd24e56a0e277d8831232c5a6b57197b354211",
            "file": "src/app/features/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "HeroComponent",
                    "type": "component"
                },
                {
                    "name": "SocialHandlesBandComponent",
                    "type": "component"
                },
                {
                    "name": "ArticlePreviewListComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\n\nimport { ArticlePreviewListComponent } from '@features/article/components/article-preview-list/article-preview-list.component'\nimport { HeroComponent } from '@features/hero/hero.component'\nimport { SocialHandlesBandComponent } from '@features/social/components/social-handles-band/social-handles-band.component'\n\n@Component({\n  selector: 'rmz-home',\n  imports: [HeroComponent, SocialHandlesBandComponent, ArticlePreviewListComponent],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent {}\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<rmz-hero />\n<rmz-social-handles-band />\n<rmz-article-preview-list />\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-4fdf6fa10e2742dc1471933dc0c0c07713974decdafe60fe35351b0cab72a8f1cdb1a09ceae399e1fd99aecbfffddf21b8cdfef11bbd5195d23e94b9d9326817",
            "file": "src/app/features/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-page-not-found",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "routerTokens",
                    "defaultValue": "RouterTokens",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { MatCardModule } from '@angular/material/card'\nimport { RouterLink } from '@angular/router'\nimport { MatButtonModule } from '@angular/material/button'\n\nimport { RouterTokens } from '../../app.routes'\n\n@Component({\n  selector: 'rmz-page-not-found',\n  imports: [MatCardModule, RouterLink, MatButtonModule],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.scss',\n})\nexport class PageNotFoundComponent {\n  readonly routerTokens = RouterTokens\n}\n",
            "styleUrl": "./page-not-found.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"not-found-container mat-elevation-z4\">\n  <mat-card-content class=\"not-found-content\">\n    <h1 class=\"mat-h1\">We are sorry, the page you requested cannot be found.</h1>\n    <h2 class=\"mat-h2\">\n      The URL may be misspelled or the page you're looking for is no longer available.\n    </h2>\n    <div class=\"user-options\">\n      <button mat-raised-button [routerLink]=\"routerTokens.home\">Back to Home</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "SocialHandleComponent",
            "id": "component-SocialHandleComponent-7af23870b004a3e4b840ab01b8a123187747c62a1bd9937100e1ac39867ff44be351e7c65dd901ed80f7b36279e90276931323a2821c9ad31398546591082901",
            "file": "src/app/features/social/components/social-handle/social-handle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-social-handle",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./social-handle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "socialHandle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "socialHandle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "openLinkInNewTab",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input } from '@angular/core'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatIconModule } from '@angular/material/icon'\n\nimport { ISocialHandle } from '@features/social/social-handle.model'\n\n@Component({\n  selector: 'rmz-social-handle',\n  imports: [MatIconModule, MatButtonModule],\n  templateUrl: './social-handle.component.html',\n  styleUrl: './social-handle.component.scss',\n})\nexport class SocialHandleComponent {\n  readonly socialHandle = input.required<ISocialHandle>()\n\n  openLinkInNewTab(url: string) {\n    window.open(url, '_blank')\n  }\n}\n",
            "styleUrl": "./social-handle.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"handle\">\n  <button mat-fab (click)=\"openLinkInNewTab(socialHandle().url)\">\n    <mat-icon [svgIcon]=\"socialHandle().name\"></mat-icon>\n  </button>\n</div>\n"
        },
        {
            "name": "SocialHandlesBandComponent",
            "id": "component-SocialHandlesBandComponent-96a512c7e3e2c62e405821b2ac2501f87231568823b350edf1d990b84f40f2cc06c2ab91724b9491b533c2fbe4aa7a53d9be99bdce85b0236f140372983acb9c",
            "file": "src/app/features/social/components/social-handles-band/social-handles-band.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rmz-social-handles-band",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./social-handles-band.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "socialHandles",
                    "defaultValue": "this.socialHandlesService.socialHandles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "socialHandlesApiError",
                    "defaultValue": "this.socialHandlesService.socialHandlesError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "socialHandlesService",
                    "defaultValue": "inject(SocialHandlesService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "SocialHandleComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core'\nimport { MatDividerModule } from '@angular/material/divider'\nimport { MatIconModule } from '@angular/material/icon'\n\nimport { SocialHandleComponent } from '@features/social/components/social-handle/social-handle.component'\nimport { SocialHandlesService } from '@features/social/components/social-handles-band/social-handles.service'\n\n@Component({\n  selector: 'rmz-social-handles-band',\n  imports: [MatDividerModule, MatIconModule, SocialHandleComponent],\n  templateUrl: './social-handles-band.component.html',\n  styleUrl: './social-handles-band.component.scss',\n})\nexport class SocialHandlesBandComponent {\n  private socialHandlesService = inject(SocialHandlesService)\n  readonly socialHandles = this.socialHandlesService.socialHandles\n  readonly socialHandlesApiError = this.socialHandlesService.socialHandlesError\n}\n",
            "styleUrl": "./social-handles-band.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"social-handles-section\">\n  <mat-divider></mat-divider>\n  <div class=\"handles\">\n    @for (socialHandle of socialHandles(); track socialHandle.name) {\n      <rmz-social-handle [socialHandle]=\"socialHandle\" />\n    }\n    @if (socialHandlesApiError()?.statusCode) {\n      <span>{{ socialHandlesApiError()?.message }}</span>\n    }\n  </div>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(withInterceptors([apimSubscriptionHeaderInterceptor])),\n    provideAppInitializer(() => inject(IconService).init()),\n  ],\n}"
            },
            {
                "name": "appTheme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/app.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'app-theme'"
            },
            {
                "name": "darkMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/app.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'dark-mode'"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  integrationsApimUrl: 'https://rimaz-dev-backend-apim.azure-api.net/v1/api/',\n  integrationsApimSubscriptionKey: 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n  cdnUrl: 'https://cdn.rimaz.dev/',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  integrationsApimUrl: 'https://rimaz-dev-backend-apim.azure-api.net/v1/api/',\n  integrationsApimSubscriptionKey: 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n  cdnUrl: 'https://cdn.rimaz.dev/',\n}"
            }
        ],
        "functions": [
            {
                "name": "apimSubscriptionHeaderInterceptor",
                "file": "src/app/core/interceptors/apim-subscription-header.interceptor.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "req",
                        "type": "HttpRequest",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "next",
                        "type": "HttpHandlerFn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Observable<HttpEvent<>>",
                "jsdoctags": [
                    {
                        "name": "req",
                        "type": "HttpRequest",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "next",
                        "type": "HttpHandlerFn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ApiRoutes",
                "childs": [
                    {
                        "name": "socialHandles",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "socialhandles"
                    },
                    {
                        "name": "articlePreviews",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "blogPreviews"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "CdnRoutes",
                "childs": [
                    {
                        "name": "heroImageDark",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "app/hero-dark.jpg"
                    },
                    {
                        "name": "heroImageLight",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "app/hero-light.jpg"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "ErrorMessages",
                "childs": [
                    {
                        "name": "unknown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "An unknown error occurred."
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "HttpRequestHeaders",
                "childs": [
                    {
                        "name": "apimSubscriptionKey",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ocp-apim-subscription-key"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "IconNames",
                "childs": [
                    {
                        "name": "github",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Github"
                    },
                    {
                        "name": "medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Medium"
                    },
                    {
                        "name": "linkedin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Linkedin"
                    },
                    {
                        "name": "stackOverflow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Stackoverflow"
                    },
                    {
                        "name": "twitterX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Twitter"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "IconResourceUrls",
                "childs": [
                    {
                        "name": "github",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/github.svg"
                    },
                    {
                        "name": "medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/medium.svg"
                    },
                    {
                        "name": "linkedin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/linkedin.svg"
                    },
                    {
                        "name": "stackOverflow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/stack-overflow.svg"
                    },
                    {
                        "name": "twitterX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "custom-icons/twitter-x.svg"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/constants/app.constants.ts"
            },
            {
                "name": "RouterTokens",
                "childs": [
                    {
                        "name": "home",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": ""
                    },
                    {
                        "name": "wildcard",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "**"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app.routes.ts"
            }
        ],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(withInterceptors([apimSubscriptionHeaderInterceptor])),\n    provideAppInitializer(() => inject(IconService).init()),\n  ],\n}"
                }
            ],
            "src/app/shared/constants/app.constants.ts": [
                {
                    "name": "appTheme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/app.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'app-theme'"
                },
                {
                    "name": "darkMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/app.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'dark-mode'"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  integrationsApimUrl: 'https://rimaz-dev-backend-apim.azure-api.net/v1/api/',\n  integrationsApimSubscriptionKey: 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n  cdnUrl: 'https://cdn.rimaz.dev/',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  integrationsApimUrl: 'https://rimaz-dev-backend-apim.azure-api.net/v1/api/',\n  integrationsApimSubscriptionKey: 'f7c3ca94b5b94e6ab7bec64a983c3fb9',\n  cdnUrl: 'https://cdn.rimaz.dev/',\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/interceptors/apim-subscription-header.interceptor.ts": [
                {
                    "name": "apimSubscriptionHeaderInterceptor",
                    "file": "src/app/core/interceptors/apim-subscription-header.interceptor.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandlerFn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Observable<HttpEvent<>>",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandlerFn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/constants/app.constants.ts": [
                {
                    "name": "ApiRoutes",
                    "childs": [
                        {
                            "name": "socialHandles",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "socialhandles"
                        },
                        {
                            "name": "articlePreviews",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "blogPreviews"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "CdnRoutes",
                    "childs": [
                        {
                            "name": "heroImageDark",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "app/hero-dark.jpg"
                        },
                        {
                            "name": "heroImageLight",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "app/hero-light.jpg"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "ErrorMessages",
                    "childs": [
                        {
                            "name": "unknown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "An unknown error occurred."
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "HttpRequestHeaders",
                    "childs": [
                        {
                            "name": "apimSubscriptionKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ocp-apim-subscription-key"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "IconNames",
                    "childs": [
                        {
                            "name": "github",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Github"
                        },
                        {
                            "name": "medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Medium"
                        },
                        {
                            "name": "linkedin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Linkedin"
                        },
                        {
                            "name": "stackOverflow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Stackoverflow"
                        },
                        {
                            "name": "twitterX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Twitter"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                },
                {
                    "name": "IconResourceUrls",
                    "childs": [
                        {
                            "name": "github",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/github.svg"
                        },
                        {
                            "name": "medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/medium.svg"
                        },
                        {
                            "name": "linkedin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/linkedin.svg"
                        },
                        {
                            "name": "stackOverflow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/stack-overflow.svg"
                        },
                        {
                            "name": "twitterX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "custom-icons/twitter-x.svg"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/constants/app.constants.ts"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "RouterTokens",
                    "childs": [
                        {
                            "name": "home",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": ""
                        },
                        {
                            "name": "wildcard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "**"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app.routes.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/apim-subscription-header.interceptor.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "apimSubscriptionHeaderInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layout/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/layout/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/error.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/result.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Result",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/error.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ErrorService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/icon.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IconService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/theme.services.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/article/article.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IArticle",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/features/article/components/article-preview-list/article-preview-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticlePreviewListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/article/components/article-preview-list/article-preview.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ArticlePreviewService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/article/components/article-preview/article-preview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticlePreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/hero/hero.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeroComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/social/components/social-handle/social-handle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialHandleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/social/components/social-handles-band/social-handles-band.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialHandlesBandComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/social/components/social-handles-band/social-handles.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SocialHandlesService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/social/social-handle.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISocialHandle",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/app.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/app.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "darkMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}